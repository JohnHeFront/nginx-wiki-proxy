events {
    worker_connections  1024;
}
http {
    server {
        server_name example.com *.example.com;
        listen 80;
        rewrite ^(/.*)$ https://$host$1 permanent;
    }
    server {
        server_name example.com www.example.com;
        listen 443 ssl http2;
        ssl_certificate /root/.acme.sh/example.com/fullchain.cer;
        ssl_certificate_key /root/.acme.sh/example.com/example.com.key;
        return 301 https://www.wikipedia.example.com;
        # root /usr/local/nginx/html/;
        # location / {
        #     index  wiki.html;
        # }
    }
    server {
        if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|^$") {return 403;}

        server_name  ~^(?<subdomain>((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?(wikimediafoundation)?))\.example\.com$;

        listen 443 ssl http2;
        resolver 8.8.8.8;
        ssl_certificate /root/.acme.sh/example.com/fullchain.cer;
        ssl_certificate_key /root/.acme.sh/example.com/example.com.key;

        location / {
            proxy_pass https://$subdomain.org;
            proxy_buffering off;

            proxy_cookie_domain $subdomain.org $subdomain.example.com;
            proxy_redirect ~^https://([\w\.]+).org(.*?)$ https://$1.example.com$2;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Accept-Encoding '';
            proxy_set_header referer "https://$proxy_host$request_uri";

            # subs_filter_types text/css text/xml text/javascript application/javascript application/json;
            subs_filter_types *;
            subs_filter "js_error.php" "block_js_error";
            subs_filter "www.google" "block_google";
            subs_filter 'wikimediafoundation.org' 'wikimediafoundation.example.com' g;
            subs_filter '([\w]+\.((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?)).org' '$1.example.com' gr;
            subs_filter '([\w]+\.m\.((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?)).org' '$1.example.com' gr;
        }
    }
    server {
        if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|^$") {return 403;}

        server_name  ~^(?<subdomain1>[^.]+)\.(?<subdomain2>((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?))\.example\.com$;

        listen 443 ssl http2;
        resolver 8.8.8.8;
        ssl_certificate /root/.acme.sh/example.com/fullchain.cer;
        ssl_certificate_key /root/.acme.sh/example.com/example.com.key;

        location / {
            proxy_pass https://$subdomain1.$subdomain2.org;
            proxy_buffering off;
            # proxy_ssl_server_name on;

            proxy_cookie_domain $subdomain1.$subdomain2.org $subdomain1.$subdomain2.example.com;
            proxy_redirect ~^https://([\w\.]+).org(.*?)$ https://$1.example.com$2;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Accept-Encoding '';
            proxy_set_header referer "https://$proxy_host$request_uri";

            # subs_filter_types text/css text/xml text/javascript application/javascript application/json;
            subs_filter_types *;
            subs_filter "js_error.php" "block_js_error";
            subs_filter "www.google" "block_google";
            subs_filter 'wikimediafoundation.org' 'wikimediafoundation.example.com' g;
            subs_filter '([\w]+\.((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?)).org' '$1.example.com' gr;
            subs_filter '([\w]+\.m\.((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?)).org' '$1.example.com' gr;
        }
    }
    server {
        if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|^$") {return 403;}

        server_name  ~^(?<subdomain1>[^.]+)\.m\.(?<subdomain2>((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?))\.example\.com$;

        listen 443 ssl http2;
        resolver 8.8.8.8;
        ssl_certificate /root/.acme.sh/example.com/fullchain.cer;
        ssl_certificate_key /root/.acme.sh/example.com/example.com.key;

        location / {
            proxy_pass https://$subdomain1.m.$subdomain2.org;
            proxy_buffering off;

            proxy_cookie_domain $subdomain1.m.$subdomain2.org $subdomain1.m.$subdomain2.example.com;
            proxy_redirect ~^https://([\w\.]+).org(.*?)$ https://$1.example.com$2;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Accept-Encoding '';
            proxy_set_header referer "https://$proxy_host$request_uri";

            # subs_filter_types text/css text/xml text/javascript application/javascript application/json;
            subs_filter_types *;
            subs_filter "js_error.php" "block_js_error";
            subs_filter "www.google" "block_google";
            subs_filter 'wikimediafoundation.org' 'wikimediafoundation.example.com' g;
            subs_filter '([\w]+\.((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?)).org' '$1.example.com' gr;
            subs_filter '([\w]+\.m\.((wikipedia)?(wiktionary)?(wikiquote)?(wikinews)?(wikisource)?(wikibooks)?(wikiversity)?(wikivoyage)?(wikidata)?(wikimedia)?(mediawiki)?)).org' '$1.example.com' gr;
        }
    }
}